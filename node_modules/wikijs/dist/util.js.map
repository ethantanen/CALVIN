{"version":3,"sources":["../src/util.js"],"names":["api","pagination","aggregatePagination","aggregate","fetchOptions","method","mode","credentials","Object","assign","params","format","action","redirects","apiOptions","origin","qs","apiUrl","stringify","url","then","res","json","error","Error","info","results","parseResults","query","srsearch","keys","filter","continueType","continueKey","resolution","next","previousResults","pageLimit","list","prefix","map","e","key","continue","continueWith","nextFromKey","nextResults"],"mappings":"4EASgBA,G,CAAAA,G,SAoBAC,U,CAAAA,U,SAkBAC,mB,CAAAA,mB,SAcAC,S,CAAAA,S,CA7DhB,mM,iNAGA,GAAMC,cAAe,CACpBC,OAAQ,KADY,CAEpBC,KAAM,MAFc,CAGpBC,YAAa,MAHO,CAArB,CAMO,QAASP,IAAT,GAAsC,iEACtC,EAAKQ,OAAOC,MAAP,IAAkBC,CAAlB,CAA0B,CACpCC,OAAQ,MAD4B,CAEpCC,OAAQ,OAF4B,CAGpCC,UAAW,EAHyB,CAA1B,CADiC,CAMxCC,EAAWC,MAN6B,GAO3CC,EAAGD,MAAH,CAAYD,EAAWC,MAPoB,EAS5C,GAAM,GAASD,EAAWG,MAApB,KAA8B,sBAAYC,SAAZ,CAAsBF,CAAtB,CAApC,CACA,MAAO,8BAAMG,CAAN,CAAWf,YAAX,EACLgB,IADK,CACA,kBAAOC,GAAIC,IAAJ,EAAP,CADA,EAELF,IAFK,CAEA,WAAO,CACZ,GAAIC,EAAIE,KAAR,CACC,KAAM,IAAIC,MAAJ,CAAUH,EAAIE,KAAJ,CAAUE,IAApB,CAAN,CAED,MAAOJ,EACP,CAPK,CAQP,CAEM,QAASpB,WAAT,OAAsD,CAC5D,MAAOD,KAAIc,CAAJ,CAAgBJ,CAAhB,EACLU,IADK,CACA,WAAO,CACZ,GAAI,GAAa,CACNM,OADM,CACIC,EAAaN,CAAb,CADJ,CAENO,KAFM,CAEElB,EAAOmB,QAFT,CAAjB,CAGA,GAAIR,EAAI,UAAJ,CAAJ,CAAqB,CACpB,GAAM,GAAeb,OACnBsB,IADmB,CACdT,EAAI,UAAJ,CADc,EAEnBU,MAFmB,CAEZ,kBAAe,UAAR,IAAP,CAFY,EAEe,CAFf,CAArB,CAGM,EAAcV,EAAI,UAAJ,EAAgBW,CAAhB,CAHpB,CAIAtB,EAAOsB,CAAP,EAAuBC,CALH,CAMpBC,EAAWC,IAAX,CAAkB,iBAAMlC,YAAWa,CAAX,CAAuBJ,CAAvB,CAA+BiB,CAA/B,CAAN,CAClB,CACD,MAAOO,EACP,CAdK,CAeP,CAEM,QAAShC,oBAAT,GAA+D,iEACrE,MAAOD,GACLmB,IADK,CACA,WAAO,CACZ,GAAM,gCAAcgB,CAAd,qBAAkCf,EAAIK,OAAtC,EAAN,CADY,MAERL,GAAIc,IAFI,CAGJjC,oBAAoBmB,EAAIc,IAAJ,EAApB,CAAgCT,CAAhC,CAHI,CAKJA,CAER,CARK,CASP,CAED,GAAMW,WAAY,GAAlB,CAEO,QAASlC,UAAT,WAAwE,iEAG9E,MAFAO,GAAO4B,IAAP,CAAcA,CAEd,CADA5B,EAAO6B,EAAS,OAAhB,EAA2BF,SAC3B,CAAOrC,IAAIc,CAAJ,CAAgBJ,CAAhB,EACLU,IADK,CACA,WAAO,CACZ,GAAM,gCAAkBM,CAAlB,qBAA8BL,EAAIO,KAAJ,CAAUU,CAAV,EAAgBE,GAAhB,CAAoB,kBAAKC,GAAEC,CAAF,CAAL,CAApB,CAA9B,EAAN,CACM,EAAerB,EAAI,gBAAJ,GAAyBA,EAAIsB,QADlD,CAEA,GAAIC,CAAJ,CAAkB,CACjB,GAAM,GAAeA,EAAaN,CAAb,GAAsBM,EAAaN,CAAb,EAAmBC,EAAS,MAA5B,CAAvB,EAA+DK,EAAaL,EAAS,UAAtB,CAAnF,CAGA,MAFA7B,GAAO6B,EAAS,UAAhB,EAA8BM,CAE9B,CADAnC,EAAO6B,EAAS,MAAhB,EAA0BM,CAC1B,CAAO1C,UAAUW,CAAV,CAAsBJ,CAAtB,CAA8B4B,CAA9B,CAAoCI,CAApC,CAAyCH,CAAzC,CAAiDO,CAAjD,CACP,CACD,MAAOA,EACP,CAXK,CAYP","file":"util.js","sourcesContent":["import fetch from 'isomorphic-fetch';\nimport querystring from 'querystring';\n\nconst fetchOptions = {\n\tmethod: 'GET'\t,\n\tmode: 'cors',\n\tcredentials: 'omit'\n};\n\nexport function api(apiOptions, params = {}) {\n\tconst qs = Object.assign({}, params, {\n\t\tformat: 'json',\n\t\taction: 'query',\n\t\tredirects: ''\n\t});\n\tif (apiOptions.origin) {\n\t\tqs.origin = apiOptions.origin;\n\t}\n\tconst url = `${apiOptions.apiUrl}?${querystring.stringify(qs)}`;\n\treturn fetch(url, fetchOptions)\n\t\t.then(res => res.json())\n\t\t.then(res => {\n\t\t\tif (res.error) {\n\t\t\t\tthrow new Error(res.error.info);\n\t\t\t}\n\t\t\treturn res;\n\t\t});\n}\n\nexport function pagination(apiOptions, params, parseResults) {\n\treturn api(apiOptions, params)\n\t\t.then(res => {\n\t\t\tlet resolution = {};\n\t\t\tresolution.results = parseResults(res);\n\t\t\tresolution.query = params.srsearch;\n\t\t\tif (res['continue']) {\n\t\t\t\tconst continueType = Object\n\t\t\t\t\t.keys(res['continue'])\n\t\t\t\t\t.filter(key => key !== 'continue')[0];\n\t\t\t\tconst continueKey = res['continue'][continueType];\n\t\t\t\tparams[continueType] = continueKey;\n\t\t\t\tresolution.next = () => pagination(apiOptions, params, parseResults);\n\t\t\t}\n\t\t\treturn resolution;\n\t\t});\n}\n\nexport function aggregatePagination(pagination, previousResults = []) {\n\treturn pagination\n\t\t.then(res => {\n\t\t\tconst results = [...previousResults, ...res.results];\n\t\t\tif (res.next) {\n\t\t\t\treturn aggregatePagination(res.next(), results);\n\t\t\t} else {\n\t\t\t\treturn results;\n\t\t\t}\n\t\t});\n}\n\nconst pageLimit = 500;\n\nexport function aggregate(apiOptions, params, list, key, prefix, results = []) {\n\tparams.list = list;\n\tparams[prefix + 'limit'] = pageLimit;\n\treturn api(apiOptions, params)\n\t\t.then(res => {\n\t\t\tconst nextResults = [...results, ...res.query[list].map(e => e[key])];\n\t\t\tconst continueWith = res['query-continue'] || res.continue;\n\t\t\tif (continueWith) {\n\t\t\t\tconst nextFromKey = (continueWith[list] && continueWith[list][prefix + 'from']) || continueWith[prefix + 'continue'];\n\t\t\t\tparams[prefix + 'continue'] = nextFromKey;\n\t\t\t\tparams[prefix + 'from'] = nextFromKey;\n\t\t\t\treturn aggregate(apiOptions, params, list, key, prefix, nextResults);\n\t\t\t}\n\t\t\treturn nextResults;\n\t\t});\n}"]}